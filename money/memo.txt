vimでunittestをするにはこれをする
:!/usr/bin/python3 -m unittest %

vimでデバッグをするにはこれをする
import pdb; pdb.set_trace()

pythonのclassはnullableなclassではないのでnullを返すのはいけない

value objectはequals()を実装しなければならない
Dollerオブジェクトをハッシュテーブルのキーとして使うならhashcodeを使わないといけない
dict = {"en": "Hello", "fr": "Bonjour"}として宣言し、print(dict["idx1"])のようにアクセスする

三角測量をするには二つ目の実例が必要

x==yはx.__eq__(y)が呼ばれる
修正するにはクラスで実装する必要がある

times()がDollerクラスを返すのがわかりにくい->
10をDoller(10)に変更
amountがクラスの中に閉じ込められたのでprivateにできる

TDDの本ではこれでもテストが通っていたのでjavaのequals()はpythonでは__eq__なのだとわかった

Javaは同一のクラスであれば別インスタンスのprivateフィールドにアクセスできる。

PYTHONPATHがあればModuleNotFoundError: No module named 'x'のエラーが解決できそうだがちょっとわからないので一旦使わない

:tabe hoge.pyで新しいファイルを作って
:tabcでそのファイルを消すことができる

times()を共通化するためにFactoryMethodを作る?

package, moduleが同じだと循環importとなるみたい?
ImportError: cannot import name 'Money' from partially initialized module 'money.money' (most likely due to a circular import) (/Users/satoyuki/Project/python/tdd-python/tests/../money/money.py)
循環参照をなくすためにimportのいちを工夫して呼び出される時にした
